
IMPORTANTE
[wsapachecommons.jar]
---------------------------------
DSGEProtocolSocketFactory


===================================================================================================================
[common.jar]
----------------------
criarDocumentoEnvioEventos
DocumentoUtil
criarXMLEnvioEventoManifestacao
criarXMLEnvioEvento
===================================================================================================================
[cert.jar]
----------------------
certificado.recuperarCertificadosArquivo
certificado.assinarXML
CertificadoHelper.recuperarCNPJ
===================================================================================================================
[controller_view.jar]
----------------------
EnviarEventoController
===================================================================================================================
[model.jar]
----------------------
TransmissorBusiness.enviarEvento
WSBusiness.b <<serviço 9>> configuração do ws

NotaFiscalFacade
SistemaFacade
NotaFiscalBusiness.assinar
NotaFiscalFacade.
TransmissorBusiness.enviarEvento
-------------------------------------------------------------------------------------------------
TransmissorBusiness.a
 private String a(EventoTO eventoTO, EstadoTO estadoTO, CertificadoTO certificadoTO, DestinatarioTO destinatarioTO) throws DSGECertificadoException, DSMDCommonException, DSMDBusinessException {
    if (eventoTO.getnSeqEvento() == null)
      eventoTO.setnSeqEvento(Integer.valueOf(DocumentoUtil.recuperarProximoNSeqEvento(eventoTO))); 
    try {
      String constant = "http://www.w3.org/2001/XMLSchema";
      SchemaFactory xsdFactory = SchemaFactory.newInstance(constant);
      Schema schema = xsdFactory.newSchema(getClass().getResource("/resources/DSMD_v1.02/envConfRecebto_v1.00.xsd"));
      DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
      documentBuilderFactory.setSchema(schema);
      documentBuilderFactory.setNamespaceAware(true);
      documentBuilderFactory.setValidating(false);
      Document document = documentBuilderFactory.newDocumentBuilder().parse(new InputSource(new InputStreamReader(new ByteArrayInputStream(DocumentoUtil.criarXMLEnvioEvento(eventoTO, estadoTO.getCodigo()).getBytes()))));
      Certificado certificado = new Certificado();
      String xmlAssinado = certificado.assinarXML(certificadoTO.getX509Certificate(), certificadoTO.getPrivateKey(), DocumentoUtil.criarIdDocumentoEvento(eventoTO), document, destinatarioTO.getNrDocumento(), "evento");
      Document documentAssinado = documentBuilderFactory.newDocumentBuilder().parse(new InputSource(new InputStreamReader(new ByteArrayInputStream(xmlAssinado.getBytes()))));
      boolean isAssinaturaValida = certificado.validarAssinaturaXML(documentAssinado);
      if (!isAssinaturaValida)
        throw new DSMDCommonException(new Exception(), "Assinatura Invtag evento!"); 
      return xmlAssinado;
    } catch (SAXException e) {
      throw new DSMDBusinessException(e, e.getMessage());
    } catch (IOException e) {
      throw new DSMDBusinessException(e, e.getMessage());
    } catch (ParserConfigurationException e) {
      throw new DSMDBusinessException(e, e.getMessage());
    } 
  }